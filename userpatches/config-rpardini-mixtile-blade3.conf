if [[ -z "${BLADE3}" ]]; then
	echo "BLADE3 not set. Please set it to A/B/C you want to build for."
	exit 1
fi

declare -g BOARD=mixtile-blade3
declare -g BRANCH=legacy
declare -g RELEASE=bookworm
declare -g CLOUD_INIT_RECIPE=vmk8s_128_containerd
declare -g CLOUD_INIT_INSTANCE_ID=mixtile-blade3-${BLADE3}

enable_extension "rkdevflash"

## Booting the mixtile-blade3's is a bit limited to u-boot currently.
# The blade3 uses USB PD powering, and the usual PD negotiations problems ensue.
# Mixtile has provided a u-boot hack (on vendor u-boot, only) that forces PD to high power and stuff works.
# That can't be done on edk2. To use edk2 we need to supply 12v power to the board which requires the u.2 breakout board.
# Since we use m.2 nvme breakout, we need to use PD, and thus need to use vendor u-boot.

echo "rpardini-mixtile-blade3 config for ${BOARD}"

declare -g -A board_netconf=()
case ${BLADE3} in
	a)
		board_netconf[maininterface]="enP2p35s0"
		board_netconf[macaddress]="62:66:30:3a:00:54"
		board_netconf[ipv4]="192.168.66.142/24"
		;;
	b)
		board_netconf[maininterface]="enP2p35s0"
		board_netconf[macaddress]="66:6b:65:61:01:50"
		board_netconf[ipv4]="192.168.66.120/24"
		;;
	c)
		declare -g BRANCH=vendor                            # vendor branch for the C board only
		declare -g CLOUD_INIT_RECIPE=arm2024_mixtile-blade3 # which does not have the auto-bridge bootscript.
		display_alert "Mixtile Blade 3 C board" "${BOARD} ${BRANCH} -- should be VENDOR" "warn"
		board_netconf[maininterface]="enP2p36s0"      # different!
		board_netconf[macaddress]="72:34:31:63:50:5e" # eth1 in uboot. should be kernel's enP2p36s0
		board_netconf[ipv4]="192.168.66.121/24"
		;;
	*)
		exit_with_error "Unknown BLADE3 value ${BLADE3}"
		;;
esac

## Blade3 networking
# I've implemented stable-mac in vendor u-boot as well, using rk vendor partition and hacks to r8169 driver.
display_alert "Mixtile Blade 3 BOARD" "${BOARD}" "info"
display_alert "Mixtile Blade 3 BRANCH" "${BRANCH}" "info"
display_alert "Mixtile Blade 3 RELEASE" "${RELEASE}" "info"
display_alert "Mixtile Blade 3 CLOUD_INIT_RECIPE" "${CLOUD_INIT_RECIPE}" "info"
display_alert "Mixtile Blade 3 CLOUD_INIT_INSTANCE_ID" "${CLOUD_INIT_INSTANCE_ID}" "info"

function post_family_config__force_sata2_overlay_for_edge() {
	if [[ "${BRANCH}" != "edge" ]]; then
		display_alert "Skipping sata2 overlay for non-edge branch" "${BOARD}" "warn"
		return 0
	fi

	display_alert "Enabling sata2 overlay for non edge" "${BOARD} ${BRANCH}" "warn"
	declare -g -r DEFAULT_OVERLAYS="sata2"
}

function post_family_config__force_sata2_overlay_for_legacy() {
	if [[ "${BRANCH}" != "legacy" && "${BRANCH}" != "vendor" ]]; then
		display_alert "Skipping sata2 overlay for non-legacy/vendor branch" "${BOARD}" "warn"
		return 0
	fi

	display_alert "Enabling sata2 overlay legacy" "${BOARD} ${BRANCH}" "warn"
	declare -g -r DEFAULT_OVERLAYS="mixtile-blade3-sata2"
}

function cloud_init_modify_network_config__mixtile_blade3() {
	display_alert "Writing Blade3 ${BLADE3} network config to cloud-init" "${BOARD} ${BRANCH}" "warn"
	local target_net_conf="${CI_TARGET}${CLOUD_INIT_CONFIG_LOCATION}"/network-config
	# Attention, this is YAML, so wihtespace is significant!
	cat <<- CLOUD_INIT_NETWORK_CONFIG_WIFI > "${target_net_conf}"
		version: 2
		renderer: networkd
		ethernets:
		  ${board_netconf[maininterface]}:
		    dhcp4: false
		    dhcp6: false
		    optional: true
		bridges:
		  lan:
		    dhcp4: false
		    dhcp6: true
		    interfaces:
		      - ${board_netconf[maininterface]}
		    optional: false
		    macaddress: ${board_netconf[macaddress]}
		    addresses:
		      - ${board_netconf[ipv4]}
		    routes:
		      - to: default # legacy was gateway4
		        via: 192.168.66.1
		    nameservers:
		      addresses:
		        - 192.168.66.1
	CLOUD_INIT_NETWORK_CONFIG_WIFI

	display_alert "Final c-i network-config" "${target_net_conf}" "warn"
	run_host_command_logged cat "${target_net_conf}"

	# Undo stuff done by cloud-init extension to normalize default dhcp
	display_alert "Removing cloud-init network-config disablement and default netplan config" "${BOARD} ${BRANCH}" "warn"
	rm -rvf "${CI_TARGET}"/etc/cloud/cloud.cfg.d/98-armbian-disable-net-config.cfg "${CI_TARGET}/etc/netplan/80-armbian-all-eths-cloud-init.yaml"
}

# common stuff for all my builds. activates a bunch of extensions.
source common-rpardini.conf
