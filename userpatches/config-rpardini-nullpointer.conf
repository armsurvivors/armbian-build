BOARD=uefi-x86
BRANCH=edge
RELEASE=bookworm
CLOUD_INIT_RECIPE=arm2024_nullpointer
CLOUD_INIT_INSTANCE_ID=nullpointerbaremetal

display_alert "NullPointer BOARD" "${BOARD}" "info"
display_alert "NullPointer BRANCH" "${BRANCH}" "info"
display_alert "NullPointer RELEASE" "${RELEASE}" "info"
display_alert "NullPointer CLOUD_INIT_RECIPE" "${CLOUD_INIT_RECIPE}" "info"
display_alert "NullPointer CLOUD_INIT_INSTANCE_ID" "${CLOUD_INIT_INSTANCE_ID}" "info"

echo "rpardini-NullPointer config for ${BOARD}"

function post_build_image_write__lvmmarker() {
	display_alert "Writing LVM marker" "${BOARD} ${CLOUD_INIT_INSTANCE_ID} ${CARD_DEVICE}" "info"
	# Use parted to:
	# Resize the 3 partition to 100gb
	# Create a 4th partition with the rest of the space, label it lvmmarker, and set the lvm flag
	wait_for_disk_sync "before lvmmarker partition"

	run_host_command_logged parted --fix --script "${CARD_DEVICE}" resizepart 3 100GB
	run_host_command_logged parted --script "${CARD_DEVICE}" mkpart lvmmarker ext4 100GB '100%'
	run_host_command_logged parted --script "${CARD_DEVICE}" set 4 lvm on
	run_host_command_logged parted --script "${CARD_DEVICE}" print

	wait_for_disk_sync "after lvmmarker partition"

	# Now use efibootmgr to create an entry pointing at the CARD_DEVICE partition 2 (the EFI partition)
	# Set the newly entry as the default boot entry
	# Set the timeout to 0
	run_host_command_logged efibootmgr --create --disk "${CARD_DEVICE}" --part 2 --loader /EFI/BOOT/BOOTX64.EFI --label "NullPointer" --verbose
}

# common stuff for all my builds. activates a bunch of extensions.
source common-rpardini.conf
